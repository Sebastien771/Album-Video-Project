version: '3.8'
services:
  # Définition du service pour la base de données PostgreSQL
  database:                               
    container_name: database              # Nom du conteneur pour identification facile
    image: postgres                       # Utilisation de l'image Docker officielle PostgreSQL
    ports:
      - "5432:5432"                       # Port 5432 mappé du conteneur vers l'hôte
    restart: always                       # Politique de redémarrage automatique du conteneur
    environment:                          # Variables d'environnement pour la configuration de PostgreSQL
      POSTGRES_USER: docker               # Nom d'utilisateur pour la connexion à la base de données
      POSTGRES_PASSWORD: docker           # Mot de passe pour l'utilisateur
      POSTGRES_DB: exampledb              # Nom de la base de données à créer
    volumes:
      - db-video-upload-service:/var/lib/postgresql/data        # Persistance des données PostgreSQL

  # Définition du service Adminer pour la gestion de la base de données via le web
  adminer:                               
    container_name: adminer               # Nom du conteneur
    image: adminer                        # Utilisation de l'image Docker officielle Adminer
    restart: always                       # Politique de redémarrage automatique du conteneur
    depends_on:
      - database                          # Dépendance envers le service database pour l'ordre de démarrage
    ports:
      - "8080:8080"                       # Port 8080 mappé du conteneur vers l'hôte

  # Définition du service pour le frontend de l'application
  frontend:                               
    container_name: frontend              # Nom du conteneur
    build: ./frontend                     # Construction de l'image à partir du Dockerfile dans le répertoire frontend
    ports:
      - "3000:80"                         # Mapping du port 3000 de l'hôte vers le port 80 dans le conteneur (nginx écoute sur le port 80)
    depends_on:
      - database                          # Dépendance envers le service database pour l'ordre de démarrage
    environment:
      - REACT_APP_API_URL=http://backend:8001             # Variable d'environnement pour l'URL de l'API utilisée par le frontend

  backend:
    container_name: backend               # Nom du conteneur
    build: ./backend                      # Construction de l'image à partir du Dockerfile dans le répertoire backend
    ports:
      - "8001:8001"                       # Mapping du port 8000 de l'hôte vers le port 8000 dans le conteneur
    depends_on:
      - database
    environment:
      - POSTGRES_DB=exampledb              # DATABASE_URL=postgresql://docker:docker@database:5432/exampledb
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      

# Définition des volumes pour la persistance des données
volumes:
  db-video-upload-service:                  # Volume nommé pour les données PostgreSQL
