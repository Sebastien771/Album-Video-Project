{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/Desktop/E5/Pe\\u0301riode 1/Application Full Stack Data/test/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Center, Text, Heading, VStack, Button, Input, HStack, Container, SimpleGrid, Box, Image, Spinner } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [allVideos, setAllVideos] = useState([]);\n  const [uploadSuccessful, setUploadSuccessful] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/videos\").then(response => response.json()).then(data => {\n      console.log(data);\n      setAllVideos(data);\n    });\n  }, [uploadSuccessful]);\n\n  const onInputChange = e => {\n    console.log(e.target.files[0]);\n    setIsSelected(true);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const onButtonClick = e => {\n    console.log(\"Button clicked..\");\n    e.target.value = \"\";\n  };\n\n  const onFileUpload = e => {\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"http://127.0.0.1:8000/videos\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success posting!!\");\n      setUploadSuccessful(!uploadSuccessful);\n      setShowSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      bg: \"black\",\n      color: \"white\",\n      padding: 8,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 7,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Your Video Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Take a look at all your uploaded videos!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onInputChange,\n            onClick: onButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"lg\",\n            colorScheme: \"red\",\n            isDisabled: !isSelected,\n            onClick: onFileUpload,\n            children: \"Upload Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), showSpinner && /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Your Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: 3,\n          spacing: 8,\n          children: allVideos.length !== 0 && allVideos.map(video => {\n            return /*#__PURE__*/_jsxDEV(\"video\", {\n              src: video[\"video_url\"],\n              autoPlay: true,\n              controls: true,\n              loop: true,\n              preload: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kzlrtaJm+lDjVAOE4GAoMhtojwk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sebastien/Desktop/E5/Période 1/Application Full Stack Data/test/frontend/src/App.js"],"names":["Center","Text","Heading","VStack","Button","Input","HStack","Container","SimpleGrid","Box","Image","Spinner","useState","useEffect","ChakraProvider","App","isSelected","setIsSelected","selectedFile","setSelectedFile","allVideos","setAllVideos","uploadSuccessful","setUploadSuccessful","showSpinner","setShowSpinner","fetch","then","response","json","data","console","log","onInputChange","e","target","files","onButtonClick","value","onFileUpload","formData","FormData","append","name","method","body","length","map","video"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,SARF,EASEC,UATF,EAUEC,GAVF,EAWEC,KAXF,EAYEC,OAZF,QAaO,kBAbP;AAeA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,KALH;AAMD,GAPQ,EAON,CAACR,gBAAD,CAPM,CAAT;;AASA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACAnB,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAE,IAAAA,eAAe,CAACe,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACD,GALD;;AAMA,QAAMC,aAAa,GAAIH,CAAD,IAAO;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAE,IAAAA,CAAC,CAACC,MAAF,CAASG,KAAT,GAAiB,EAAjB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIL,CAAD,IAAO;AAC1BT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMe,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBxB,YAAxB,EAAsCA,YAAY,CAACyB,IAAnD;AACAjB,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCkB,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,IAAI,EAAEL;AAF8B,KAAjC,CAAL,CAIGb,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,MAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACAG,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KATH;AAUD,GAdD;;AAeA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAiC,MAAA,OAAO,EAAE,CAA1C;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAEQ,aAFZ;AAGE,YAAA,OAAO,EAAEI;AAHX;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,IADP;AAEE,YAAA,WAAW,EAAC,KAFd;AAGE,YAAA,UAAU,EAAE,CAACrB,UAHf;AAIE,YAAA,OAAO,EAAEuB,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAeGf,WAAW,iBACV,QAAC,MAAD;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAwBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAyBE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,CAArB;AAAwB,UAAA,OAAO,EAAE,CAAjC;AAAA,oBACGJ,SAAS,CAAC0B,MAAV,KAAqB,CAArB,IACC1B,SAAS,CAAC2B,GAAV,CAAeC,KAAD,IAAW;AACvB,gCACE;AACE,cAAA,GAAG,EAAEA,KAAK,CAAC,WAAD,CADZ;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,IAAI,MAJN;AAKE,cAAA,OAAO,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GAxFQjC,G;;KAAAA,G;AA0FT,eAAeA,GAAf","sourcesContent":["import {\n  Center,\n  Text,\n  Heading,\n  VStack,\n  Button,\n  Input,\n  HStack,\n  Container,\n  SimpleGrid,\n  Box,\n  Image,\n  Spinner,\n} from \"@chakra-ui/react\";\n\nimport { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [allVideos, setAllVideos] = useState([]);\n  const [uploadSuccessful, setUploadSuccessful] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/videos\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setAllVideos(data);\n      });\n  }, [uploadSuccessful]);\n\n  const onInputChange = (e) => {\n    console.log(e.target.files[0]);\n    setIsSelected(true);\n\n    setSelectedFile(e.target.files[0]);\n  };\n  const onButtonClick = (e) => {\n    console.log(\"Button clicked..\");\n    e.target.value = \"\";\n  };\n\n  const onFileUpload = (e) => {\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"http://127.0.0.1:8000/videos\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success posting!!\");\n        setUploadSuccessful(!uploadSuccessful);\n        setShowSpinner(false);\n      });\n  };\n  return (\n    <ChakraProvider>\n      <Center bg=\"black\" color=\"white\" padding={8}>\n        <VStack spacing={7}>\n          <Heading>Your Video Gallery</Heading>\n          <Text>Take a look at all your uploaded videos!!</Text>\n          <HStack>\n            <input\n              type=\"file\"\n              onChange={onInputChange}\n              onClick={onButtonClick}\n            ></input>\n\n            <Button\n              size=\"lg\"\n              colorScheme=\"red\"\n              isDisabled={!isSelected}\n              onClick={onFileUpload}\n            >\n              Upload Video\n            </Button>\n            {showSpinner && (\n              <Center>\n                <Spinner size=\"xl\" />\n              </Center>\n            )}\n          </HStack>\n          <Heading>Your Videos</Heading>\n          <SimpleGrid columns={3} spacing={8}>\n            {allVideos.length !== 0 &&\n              allVideos.map((video) => {\n                return (\n                  <video\n                    src={video[\"video_url\"]}\n                    autoPlay\n                    controls\n                    loop\n                    preload=\"auto\"\n                  ></video>\n                );\n              })}\n          </SimpleGrid>\n        </VStack>\n      </Center>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}