{"ast":null,"code":"var _jsxFileName = \"/Users/sebastien/Desktop/E5/Pe\\u0301riode 1/Application Full Stack Data/Fullstack-Application-Project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Center, Text, Heading, VStack, Button, Input, HStack, Container, SimpleGrid, Box, Image, Spinner } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction app() {\n  _s();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [allVideos, setAllVideos] = useState([]);\n  const [uploadSuccessfull, setUploadSuccessful] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/videos\").then(response => response.json()).then(data => {\n      console.log(data);\n      setAllVideos(data);\n    });\n  }, [uploadSuccessful]);\n\n  const onInputChange = e => {\n    setIsSelected(true);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const oneFileUpload = e => {\n    setShowSpinner(true);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    fetch(\"http://127.0.0.1:8000/videos\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(\"Post Succès\");\n      setUploadSuccessful(!uploadSuccessful);\n      setShowSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      bg: \"black\",\n      color: \"white\",\n      padding: 8,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 7,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \" Votre galerie Vid\\xE9os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Aper\\xE7u de toutes vos vid\\xE9os t\\xE9l\\xE9charg\\xE9es !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onInputChange,\n            onClick: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"lg\",\n            colorScheme: \"red\",\n            isDisabled: !isSelected,\n            onClick: oneFileUpload,\n            children: \"T\\xE9l\\xE9charger une vid\\xE9o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), showSpinner && /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Vos vid\\xE9os\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: 3,\n          spacing: 8,\n          children: allVideos.length !== 0 && allVideos.map(video => {\n            return /*#__PURE__*/_jsxDEV(\"video\", {\n              src: video[\"video_url\"],\n              autoPlay: true,\n              controls: true,\n              loop: true,\n              preload: \"auto\",\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(app, \"LV2heoLEbFL22GdE+j3sv2+1xXE=\");\n\nexport default App;","map":{"version":3,"sources":["/Users/sebastien/Desktop/E5/Période 1/Application Full Stack Data/Fullstack-Application-Project/frontend/src/App.js"],"names":["Center","Text","Heading","VStack","Button","Input","HStack","Container","SimpleGrid","Box","Image","Spinner","useState","useEffect","ChakraProvider","app","isSelected","setIsSelected","selectedFile","setSelectedFile","allVideos","setAllVideos","uploadSuccessfull","setUploadSuccessful","showSpinner","setShowSpinner","fetch","then","response","json","data","console","log","uploadSuccessful","onInputChange","e","target","files","oneFileUpload","formData","FormData","append","name","method","body","length","map","video","App"],"mappings":";;;AAAA,SACIA,MADJ,EAEIC,IAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,MALJ,EAMIC,KANJ,EAOIC,MAPJ,EAQIC,SARJ,EASIC,UATJ,EAUIC,GAVJ,EAWIC,KAXJ,EAYIC,OAZJ,QAaO,kBAbP;AAeA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,iBAAD,EAAoBC,mBAApB,IAA2CX,QAAQ,CAAC,KAAD,CAAzD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACH,KALD;AAMH,GAPQ,EAON,CAACG,gBAAD,CAPM,CAAT;;AASA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBlB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,eAAe,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAf;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAIH,CAAD,IAAO;AACzBV,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,UAAMc,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBvB,YAAxB,EAAsCA,YAAY,CAACwB,IAAnD;AAEAhB,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCiB,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,IAAI,EAAEL;AAF4B,KAAjC,CAAL,CAIKZ,IAJL,CAIWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJxB,EAKKF,IALL,CAKWG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAT,MAAAA,mBAAmB,CAAC,CAACU,gBAAF,CAAnB;AACAR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KATL;AAUH,GAhBD;;AAkBA,sBACI,QAAC,cAAD;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAiC,MAAA,OAAO,EAAE,CAA1C;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAES,aAA7B;AAA4C,YAAA,OAAO,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACA,YAAA,IAAI,EAAC,IADL;AAEA,YAAA,WAAW,EAAC,KAFZ;AAGA,YAAA,UAAU,EAAE,CAAClB,UAHb;AAIA,YAAA,OAAO,EAAEsB,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWQd,WAAW,iBACX,QAAC,MAAD;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAoBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAqBI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,CAArB;AAAwB,UAAA,OAAO,EAAE,CAAjC;AAAA,oBACCJ,SAAS,CAACyB,MAAV,KAAqB,CAArB,IACGzB,SAAS,CAAC0B,GAAV,CAAeC,KAAD,IAAW;AACrB,gCACI;AACA,cAAA,GAAG,EAAEA,KAAK,CAAC,WAAD,CADV;AAEA,cAAA,QAAQ,MAFR;AAGA,cAAA,QAAQ,MAHR;AAIA,cAAA,IAAI,MAJJ;AAKA,cAAA,OAAO,EAAC,MALR;AAMA,cAAA,KAAK;AANL;AAAA;AAAA;AAAA;AAAA,oBADJ;AAUH,WAXD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAlFQhC,G;;AAoFT,eAAeiC,GAAf","sourcesContent":["import {\n    Center,\n    Text,\n    Heading,\n    VStack,\n    Button,\n    Input,\n    HStack,\n    Container,\n    SimpleGrid,\n    Box,\n    Image,\n    Spinner,\n} from \"@chakra-ui/react\";\n\nimport { useState, useEffect } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction app() {\n    const [isSelected, setIsSelected] = useState(false)\n    const [selectedFile, setSelectedFile] = useState(null)\n    const [allVideos, setAllVideos] = useState([])\n    const [uploadSuccessfull, setUploadSuccessful] = useState(false)\n    const [showSpinner, setShowSpinner] = useState(false);\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:8000/videos\")\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n            setAllVideos(data);\n        });\n    }, [uploadSuccessful]);\n\n    const onInputChange = (e) => {\n        setIsSelected(true);\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const oneFileUpload = (e) => {\n        setShowSpinner(true);\n\n        const formData = new FormData();\n        formData.append(\"file\", selectedFile, selectedFile.name);\n\n        fetch(\"http://127.0.0.1:8000/videos\", {\n            method: \"POST\",\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Post Succès\");\n                setUploadSuccessful(!uploadSuccessful);\n                setShowSpinner(false);\n            });\n    };\n\n    return (\n        <ChakraProvider>\n            <Center bg=\"black\" color=\"white\" padding={8}>\n                <VStack spacing={7}>\n                    <Heading> Votre galerie Vidéos</Heading>\n                    <Text>Aperçu de toutes vos vidéos téléchargées !</Text>\n                    <HStack>\n                        <input type=\"file\" onChange={onInputChange} onClick={null}></input>\n                        <Button \n                        size=\"lg\" \n                        colorScheme=\"red\" \n                        isDisabled={!isSelected}\n                        onClick={oneFileUpload}\n                        >\n                            Télécharger une vidéo\n                        </Button>\n                        {\n                            showSpinner && (\n                            <Center>\n                                <Spinner size=\"xl\"></Spinner>\n                            </Center>\n                        )}\n                    </HStack>\n                    <Heading>Vos vidéos</Heading>\n                    <SimpleGrid columns={3} spacing={8}>\n                    {allVideos.length !== 0 && \n                        allVideos.map((video) => {\n                            return (\n                                <video \n                                src={video[\"video_url\"]} \n                                autoPlay \n                                controls \n                                loop \n                                preload=\"auto\"\n                                muted\n                                ></video>\n                            );\n                        })}\n                    </SimpleGrid>\n                </VStack>\n            </Center>\n        </ChakraProvider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}